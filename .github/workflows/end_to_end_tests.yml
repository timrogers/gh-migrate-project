name: End to end tests
on:
  workflow_run:
    workflows:
      - "CI"
    types:
      - completed

permissions:
  actions: read
  contents: read
  checks: write

jobs:
  end_to_end_tests_macos:
    name: Run end to end tests (GitHub.com to GitHub.com on macOS)
    runs-on: macos-latest
    env:
      check_name: End to end tests (GitHub.com to GitHub.com on macOS)

    steps:
      - name: Download macOS binary
        uses: dawidd6/action-download-artifact@71072fbb1229e1317f1a8de6b04206afb461bd67
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-macos
          path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make macOS binary executable
        run: chmod +x bin/gh-migrate-project-darwin-amd64
      - name: Export a project from GitHub.com
        run: ./bin/gh-migrate-project-darwin-amd64 export --project-owner gh-migrate-project-sandbox --project-number 1 --disable-telemetry
        env:
          EXPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Copy outputs to output/ directory
        run: cp project.json output/ && cp repository-mappings.csv output/
      - name: Print outputted project data
        run: cat project.json
      - name: Print repository mappings template
        run: cat repository-mappings.csv
      - name: Fill in repository mappings template
        run: |
          echo "source_repository,target_repository
          gh-migrate-project-sandbox/initial-repository,gh-migrate-project-sandbox/initial-repository" > completed-repository-mappings.csv
      - name: Import project to GitHub.com
        run: ./bin/gh-migrate-project-darwin-amd64 import --input-path project.json --repository-mappings-path completed-repository-mappings.csv --project-owner gh-migrate-project-sandbox --disable-telemetry
        env:
          IMPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-outputs
          path: output
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}
  
  end_to_end_tests_linux:
    name: Run end to end tests (GitHub.com to GitHub.com on Linux)
    runs-on: ubuntu-latest
    env:
      check_name: End to end tests (GitHub.com to GitHub.com on Linux)

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@71072fbb1229e1317f1a8de6b04206afb461bd67
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migrate-project-linux-amd64
      - name: Export a project from GitHub.com
        run: ./bin/gh-migrate-project-linux-amd64 export --project-owner gh-migrate-project-sandbox --project-number 1 --disable-telemetry
        env:
          EXPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Copy outputs to output/ directory
        run: cp project.json output/ && cp repository-mappings.csv output/
      - name: Print outputted project data
        run: cat project.json
      - name: Print repository mappings template
        run: cat repository-mappings.csv
      - name: Fill in repository mappings template
        run: |
          echo "source_repository,target_repository
          gh-migrate-project-sandbox/initial-repository,gh-migrate-project-sandbox/initial-repository" > completed-repository-mappings.csv
      - name: Import project to GitHub.com
        run: ./bin/gh-migrate-project-linux-amd64 import --input-path project.json --repository-mappings-path completed-repository-mappings.csv --project-owner gh-migrate-project-sandbox --disable-telemetry
        env:
          IMPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-outputs
          path: output
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_windows:
    name: Run end to end tests (GitHub.com to GitHub.com on Windows)
    runs-on: windows-latest
    env:
      check_name: End to end tests (GitHub.com to GitHub.com on Windows)

    steps:
      - name: Download Windows binary
        uses: dawidd6/action-download-artifact@71072fbb1229e1317f1a8de6b04206afb461bd67
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: package-windows
          path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Export a project from GitHub.com
        run: bin/gh-migrate-project-windows-amd64.exe export --project-owner gh-migrate-project-sandbox --project-number 1 --disable-telemetry
        env:
          EXPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Copy outputs to output/ directory
        run: cp project.json output/ && cp repository-mappings.csv output/
      - name: Print outputted project data
        run: cat project.json
      - name: Print repository mappings template
        run: cat repository-mappings.csv
      - name: Fill in repository mappings template
        run: |
          echo "source_repository,target_repository
          gh-migrate-project-sandbox/initial-repository,gh-migrate-project-sandbox/initial-repository" > completed-repository-mappings.csv
      - name: Import project to GitHub.com
        run: bin/gh-migrate-project-windows-amd64.exe import --input-path project.json --repository-mappings-path completed-repository-mappings.csv --project-owner gh-migrate-project-sandbox --disable-telemetry
        env:
          IMPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-outputs
          path: output
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_linux_ghes_311:
    name: Run end to end tests (GitHub.com to GHES v3.11 on Linux)
    runs-on: ubuntu-latest
    env:
      check_name: End to end tests (GitHub.com to GHES v3.11 on Linux)

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@71072fbb1229e1317f1a8de6b04206afb461bd67
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migrate-project-linux-amd64
      - name: Export a project from GitHub.com
        run: ./bin/gh-migrate-project-linux-amd64 export --project-owner gh-migrate-project-sandbox --project-number 1 --disable-telemetry
        env:
          EXPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Copy outputs to output/ directory
        run: cp project.json output/ && cp repository-mappings.csv output/
      - name: Print outputted project data
        run: cat project.json
      - name: Print repository mappings template
        run: cat repository-mappings.csv
      - name: Fill in repository mappings template
        run: |
          echo "source_repository,target_repository
          gh-migrate-project-sandbox/initial-repository,gh-migrate-project-sandbox/initial-repository" > completed-repository-mappings.csv
      - name: Import project to GHES v3.11
        run: ./bin/gh-migrate-project-linux-amd64 import --input-path project.json --repository-mappings-path completed-repository-mappings.csv --project-owner gh-migrate-project-sandbox --disable-telemetry --base-url ${{ secrets.GHES_311_BASE_URL }}
        env:
          IMPORT_GITHUB_TOKEN: ${{ secrets.GHES_311_ACCESS_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-outputs-ghes-311
          path: output
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}

  end_to_end_tests_linux_ghes_310:
    name: Run end to end tests (GitHub.com to GHES v3.10 on Linux)
    runs-on: ubuntu-latest
    env:
      check_name: End to end tests (GitHub.com to GHES v3.10 on Linux)

    steps:
      - name: Download Linux binary
        uses: dawidd6/action-download-artifact@71072fbb1229e1317f1a8de6b04206afb461bd67
        with:
           run_id: ${{ github.event.workflow_run.id }}
           name: package-linux
           path: bin
      - name: Create `output` directory
        run: mkdir output
      - name: Make Linux binary executable
        run: chmod +x bin/gh-migrate-project-linux-amd64
      - name: Export a project from GitHub.com
        run: ./bin/gh-migrate-project-linux-amd64 export --project-owner gh-migrate-project-sandbox --project-number 1 --disable-telemetry
        env:
          EXPORT_GITHUB_TOKEN: ${{ secrets.GH_MIGRATE_PROJECT_SANDBOX_TOKEN }}
      - name: Copy outputs to output/ directory
        run: cp project.json output/ && cp repository-mappings.csv output/
      - name: Print outputted project data
        run: cat project.json
      - name: Print repository mappings template
        run: cat repository-mappings.csv
      - name: Fill in repository mappings template
        run: |
          echo "source_repository,target_repository
          gh-migrate-project-sandbox/initial-repository,gh-migrate-project-sandbox/initial-repository" > completed-repository-mappings.csv
      - name: Import project to GHES v3.11
        run: ./bin/gh-migrate-project-linux-amd64 import --input-path project.json --repository-mappings-path completed-repository-mappings.csv --project-owner gh-migrate-project-sandbox --disable-telemetry --base-url ${{ secrets.GHES_310_BASE_URL }}
        env:
          IMPORT_GITHUB_TOKEN: ${{ secrets.GHES_310_ACCESS_TOKEN }}
      - name: Upload outputs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-outputs-ghes-310
          path: output
      - name: Set Status Check
        uses: LouisBrunner/checks-action@6b626ffbad7cc56fd58627f774b9067e6118af23
        if: always()
        with:
          sha: ${{ github.event.workflow_run.head_sha}}
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.check_name }}
          conclusion: ${{ job.status }}